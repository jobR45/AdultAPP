plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

ext{

    secure_preferences = '0.1.7'
    kotlin_version = "1.6.10"
    lifecycle_version = "2.5.0-alpha05"
    hilt_nav_fragment = '1.0.0'
    lifecycle_livedata_ktx = '2.3.0'
    lifecycle_viewmodel_ktx = '2.3.0'
    app_compat_version = '1.4.1'
    room_version = '2.5.0-alpha01'
    kapt_room_version = '1.1.1'
    card_view_version = '1.0.0'
    retrofit_version = "2.5.0"
    moshi_version = "1.13.0"
    moshi_converter_version = "2.9.0"
    kotlin_coroutines_version = "1.1.0"
    retrofit_coroutines_adapter_version = "0.9.2"
    glide_version = "4.12.0"
    logging_interceptor_version = "4.9.3"
    paging_version = "3.1.1"
    swipe_refresh_version = "1.1.0"
    nav_version = "2.5.3"
}

android {
    namespace 'com.example.adultapp'
    compileSdk 32

    defaultConfig {
        applicationId "com.example.adultapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        debug{
            debuggable true
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
            buildConfigField("String", "BASE_URL", '"https://adultvideosapi.com/api/"')
            buildConfigField("String", "API_KEY", '"Os7dN5UrFD3UWdC06606vj1K5bRW018y"')


        }
        release {
            minifyEnabled false
            buildConfigField("String", "BASE_URL", '"https://adultvideosapi.com/api/"')
            buildConfigField("String", "API_KEY", '"Os7dN5UrFD3UWdC06606vj1K5bRW018y"')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        viewBinding true
        dataBinding true
    }


}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.leanback:leanback:1.0.0'


    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-fragment:$hilt_nav_fragment"


    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation("androidx.navigation:navigation-dynamic-features-fragment:$nav_version")



    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"


    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofit_coroutines_adapter_version"

    //Glide to Load Image and use Cache
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Moshi
    implementation("com.squareup.moshi:moshi:$moshi_version")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:$moshi_version")
    implementation "com.squareup.retrofit2:converter-moshi:$moshi_converter_version"
    implementation("com.squareup.moshi:moshi-kotlin:$moshi_version")


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // ViewModel utilities for Compose
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    //logging interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor_version"
}